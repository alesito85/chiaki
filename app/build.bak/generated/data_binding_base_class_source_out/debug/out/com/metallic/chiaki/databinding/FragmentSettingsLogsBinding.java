// Generated by view binder compiler. Do not edit!
package com.metallic.chiaki.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textview.MaterialTextView;
import com.metallic.chiaki.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsLogsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Group emptyInfoGroup;

  @NonNull
  public final ImageView emptyInfoImageView;

  @NonNull
  public final MaterialTextView emptyInfoTextView;

  @NonNull
  public final RecyclerView logsRecyclerView;

  @NonNull
  public final ConstraintLayout rootLayout;

  private FragmentSettingsLogsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Group emptyInfoGroup, @NonNull ImageView emptyInfoImageView,
      @NonNull MaterialTextView emptyInfoTextView, @NonNull RecyclerView logsRecyclerView,
      @NonNull ConstraintLayout rootLayout) {
    this.rootView = rootView;
    this.emptyInfoGroup = emptyInfoGroup;
    this.emptyInfoImageView = emptyInfoImageView;
    this.emptyInfoTextView = emptyInfoTextView;
    this.logsRecyclerView = logsRecyclerView;
    this.rootLayout = rootLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsLogsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsLogsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings_logs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsLogsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyInfoGroup;
      Group emptyInfoGroup = rootView.findViewById(id);
      if (emptyInfoGroup == null) {
        break missingId;
      }

      id = R.id.emptyInfoImageView;
      ImageView emptyInfoImageView = rootView.findViewById(id);
      if (emptyInfoImageView == null) {
        break missingId;
      }

      id = R.id.emptyInfoTextView;
      MaterialTextView emptyInfoTextView = rootView.findViewById(id);
      if (emptyInfoTextView == null) {
        break missingId;
      }

      id = R.id.logsRecyclerView;
      RecyclerView logsRecyclerView = rootView.findViewById(id);
      if (logsRecyclerView == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      return new FragmentSettingsLogsBinding((ConstraintLayout) rootView, emptyInfoGroup,
          emptyInfoImageView, emptyInfoTextView, logsRecyclerView, rootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
