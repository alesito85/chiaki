// Generated by view binder compiler. Do not edit!
package com.metallic.chiaki.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.metallic.chiaki.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDisplayHostBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatTextView bottomInfoTextView;

  @NonNull
  public final FrameLayout discoveredIndicatorLayout;

  @NonNull
  public final AppCompatTextView hostTextView;

  @NonNull
  public final AppCompatTextView idTextView;

  @NonNull
  public final AppCompatImageButton menuButton;

  @NonNull
  public final AppCompatTextView nameTextView;

  @NonNull
  public final ImageView stateIndicatorImageView;

  private ItemDisplayHostBinding(@NonNull CardView rootView,
      @NonNull AppCompatTextView bottomInfoTextView, @NonNull FrameLayout discoveredIndicatorLayout,
      @NonNull AppCompatTextView hostTextView, @NonNull AppCompatTextView idTextView,
      @NonNull AppCompatImageButton menuButton, @NonNull AppCompatTextView nameTextView,
      @NonNull ImageView stateIndicatorImageView) {
    this.rootView = rootView;
    this.bottomInfoTextView = bottomInfoTextView;
    this.discoveredIndicatorLayout = discoveredIndicatorLayout;
    this.hostTextView = hostTextView;
    this.idTextView = idTextView;
    this.menuButton = menuButton;
    this.nameTextView = nameTextView;
    this.stateIndicatorImageView = stateIndicatorImageView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDisplayHostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDisplayHostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_display_host, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDisplayHostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomInfoTextView;
      AppCompatTextView bottomInfoTextView = rootView.findViewById(id);
      if (bottomInfoTextView == null) {
        break missingId;
      }

      id = R.id.discoveredIndicatorLayout;
      FrameLayout discoveredIndicatorLayout = rootView.findViewById(id);
      if (discoveredIndicatorLayout == null) {
        break missingId;
      }

      id = R.id.hostTextView;
      AppCompatTextView hostTextView = rootView.findViewById(id);
      if (hostTextView == null) {
        break missingId;
      }

      id = R.id.idTextView;
      AppCompatTextView idTextView = rootView.findViewById(id);
      if (idTextView == null) {
        break missingId;
      }

      id = R.id.menuButton;
      AppCompatImageButton menuButton = rootView.findViewById(id);
      if (menuButton == null) {
        break missingId;
      }

      id = R.id.nameTextView;
      AppCompatTextView nameTextView = rootView.findViewById(id);
      if (nameTextView == null) {
        break missingId;
      }

      id = R.id.stateIndicatorImageView;
      ImageView stateIndicatorImageView = rootView.findViewById(id);
      if (stateIndicatorImageView == null) {
        break missingId;
      }

      return new ItemDisplayHostBinding((CardView) rootView, bottomInfoTextView,
          discoveredIndicatorLayout, hostTextView, idTextView, menuButton, nameTextView,
          stateIndicatorImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
